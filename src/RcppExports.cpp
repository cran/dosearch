// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// initialize_cpp
Rcpp::List initialize_cpp(const std::vector<int>& dir_lhs, const std::vector<int>& dir_rhs, const std::vector<int>& bi_lhs, const std::vector<int>& bi_rhs, const Rcpp::StringVector& lab, const Rcpp::List& p_list, const std::vector<int>& q_vec, const int& n, const int& tr, const int& sb, const int& md_s, const int& md_p, const std::vector<int>& rules, const bool& draw_derivation, const bool& draw_all, const bool& derive_all, const bool& formula, const bool& improve, const bool& heuristic, const bool& replace, const char& md_sym, const bool& verbose);
RcppExport SEXP _dosearch_initialize_cpp(SEXP dir_lhsSEXP, SEXP dir_rhsSEXP, SEXP bi_lhsSEXP, SEXP bi_rhsSEXP, SEXP labSEXP, SEXP p_listSEXP, SEXP q_vecSEXP, SEXP nSEXP, SEXP trSEXP, SEXP sbSEXP, SEXP md_sSEXP, SEXP md_pSEXP, SEXP rulesSEXP, SEXP draw_derivationSEXP, SEXP draw_allSEXP, SEXP derive_allSEXP, SEXP formulaSEXP, SEXP improveSEXP, SEXP heuristicSEXP, SEXP replaceSEXP, SEXP md_symSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<int>& >::type dir_lhs(dir_lhsSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type dir_rhs(dir_rhsSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type bi_lhs(bi_lhsSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type bi_rhs(bi_rhsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::StringVector& >::type lab(labSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type p_list(p_listSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type q_vec(q_vecSEXP);
    Rcpp::traits::input_parameter< const int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const int& >::type tr(trSEXP);
    Rcpp::traits::input_parameter< const int& >::type sb(sbSEXP);
    Rcpp::traits::input_parameter< const int& >::type md_s(md_sSEXP);
    Rcpp::traits::input_parameter< const int& >::type md_p(md_pSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type rules(rulesSEXP);
    Rcpp::traits::input_parameter< const bool& >::type draw_derivation(draw_derivationSEXP);
    Rcpp::traits::input_parameter< const bool& >::type draw_all(draw_allSEXP);
    Rcpp::traits::input_parameter< const bool& >::type derive_all(derive_allSEXP);
    Rcpp::traits::input_parameter< const bool& >::type formula(formulaSEXP);
    Rcpp::traits::input_parameter< const bool& >::type improve(improveSEXP);
    Rcpp::traits::input_parameter< const bool& >::type heuristic(heuristicSEXP);
    Rcpp::traits::input_parameter< const bool& >::type replace(replaceSEXP);
    Rcpp::traits::input_parameter< const char& >::type md_sym(md_symSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(initialize_cpp(dir_lhs, dir_rhs, bi_lhs, bi_rhs, lab, p_list, q_vec, n, tr, sb, md_s, md_p, rules, draw_derivation, draw_all, derive_all, formula, improve, heuristic, replace, md_sym, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dosearch_initialize_cpp", (DL_FUNC) &_dosearch_initialize_cpp, 22},
    {NULL, NULL, 0}
};

RcppExport void R_init_dosearch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
